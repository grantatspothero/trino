name: ci

on:
  push:
    branches:
      - master
      - main
    paths-ignore:
      - 'README.md'
      - 'data-server/README.md'
      - 'discovery-server/README.md'
  pull_request:
    types:
      - opened
      - synchronize
      - labeled
      - reopened
    paths-ignore:
      - 'README.md'
      - 'data-server/README.md'
      - 'discovery-server/README.md'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

env:
  # An envar that signals to tests we are executing in the CI environment
  CONTINUOUS_INTEGRATION: true

  mavenReleaseUsername: ${{ secrets.MAVEN_RELEASE_SERVER_USERNAME }}
  mavenReleasePassword: ${{ secrets.MAVEN_RELEASE_SERVER_PASSWORD }}
  mavenSnapshotsUsername: ${{ secrets.MAVEN_SNAPSHOT_SERVER_USERNAME }}
  mavenSnapshotsPassword: ${{ secrets.MAVEN_SNAPSHOT_SERVER_PASSWORD }}

jobs:
  determine-version:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      version: ${{ steps.project.outputs.version }}
    steps:
      - name: Cleanup workspace
        run: rm -rf *

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Determine the project version
        id: project
        run: |
          # we use Trino version as a version prefix as maven assembly plugin does not work well with versions not starting with a number
          trino_version=$(./mvnw -B help:evaluate -Dexpression=dep.trino.version -q -DforceStdout)
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "version=${trino_version}-pr${{ github.event.number }}-$(git describe --tags)" >> $GITHUB_OUTPUT
          else
            echo "version=${trino_version}-$(git describe --tags)" >> $GITHUB_OUTPUT
          fi

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs:
      - determine-version
    steps:
      - name: Cleanup workspace
        run: rm -rf *

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-mvn-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-mvn-

      - name: Merge with main before building
        if: github.event_name == 'pull_request'
        run: |
          git fetch origin
          git merge origin/main --ff-only

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_CICD_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_CICD_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to CodeArtifact
        uses: starburstdata/codeartifact-login-action@v1
        with:
          domain: starburstdata-sep-cicd
          owner: 843985043183
          region: us-east-2
          user-variable: codeArtifactUsername
          password-variable: codeArtifactPassword

      - name: Maven Install
        run: ./mvnw install -P ci -T 1C -s .github/settings.xml -B -V -DskipTests -Dair.check.skip-all -Drevision=${{ needs.determine-version.outputs.version }}

      - name: Maven Tests
        run: ./mvnw install -P ci -T 1C -s .github/settings.xml -B -Drevision=${{ needs.determine-version.outputs.version }}

      - name: Maven Deploy
        run: ./mvnw deploy -P ci -T 1C -s .github/settings.xml -B -DskipTests -Dair.check.skip-all -Drevision=${{ needs.determine-version.outputs.version }}

      - name: Determine if we need to build container images
        id: container-images
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || contains(github.event.*.labels.*.name, 'with-images')
        run: |
          echo "build=true" >> $GITHUB_OUTPUT

      - name: Import Secrets
        if: steps.container-images.outputs.build
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        id: secrets
        with:
          secret-ids: |
            container/registry
          parse-json-secrets: true

      - name: Login to the Elastic Container Registry
        if: steps.container-images.outputs.build
        uses: docker/login-action@v2
        with:
          registry: 179619298502.dkr.ecr.us-east-1.amazonaws.com

      - name: Login to the Azure Container Registry
        if: steps.container-images.outputs.build
        uses: docker/login-action@v2
        with:
          registry: starburstgalaxy.azurecr.io
          username: ${{ env.CONTAINER_REGISTRY_ACR_DOCKER_USERNAME }}
          password: ${{ env.CONTAINER_REGISTRY_ACR_DOCKER_PASSWORD }}

      - name: Login to the GCP Artifact Registry
        if: steps.container-images.outputs.build
        uses: docker/login-action@v2
        with:
          registry: us-east1-docker.pkg.dev/starburstdata-saas-prod/starburst-docker-repository
          username: ${{ env.CONTAINER_REGISTRY_GCR_DOCKER_USERNAME }}
          password: ${{ env.CONTAINER_REGISTRY_GCR_DOCKER_PASSWORD }}

      - name: Set up QEMU
        if: steps.container-images.outputs.build
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        if: steps.container-images.outputs.build
        uses: docker/setup-buildx-action@v2

      - name: Build and push the Data Server Docker image
        if: steps.container-images.outputs.build
        run: |
          ./bin/build-docker-image.sh -p data-server \
            -r 179619298502.dkr.ecr.us-east-1.amazonaws.com/galaxy \
            -r us-east1-docker.pkg.dev/starburstdata-saas-prod/starburst-docker-repository/galaxy \
            -r starburstgalaxy.azurecr.io/galaxy \
            -v ${{ needs.determine-version.outputs.version }} \
            -a linux/amd64,linux/arm64 \
            -P

      - name: Build and push the Discovery Server Docker image
        if: steps.container-images.outputs.build
        run: |
          ./bin/build-docker-image.sh -p discovery-server \
            -r 179619298502.dkr.ecr.us-east-1.amazonaws.com/galaxy \
            -r us-east1-docker.pkg.dev/starburstdata-saas-prod/starburst-docker-repository/galaxy \
            -r starburstgalaxy.azurecr.io/galaxy \
            -v ${{ needs.determine-version.outputs.version }} \
            -a linux/amd64,linux/arm64 \
            -P

  test-buffer-exchange-failure-recovery:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs:
      - determine-version
    steps:
      - name: Cleanup workspace
        run: rm -rf *

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-mvn-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-mvn-

      - name: Merge with main before building
        if: github.event_name == 'pull_request'
        run: |
          git fetch origin
          git merge origin/main --ff-only

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_CICD_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_CICD_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to CodeArtifact
        uses: starburstdata/codeartifact-login-action@v1
        with:
          domain: starburstdata-sep-cicd
          owner: 843985043183
          region: us-east-2
          user-variable: codeArtifactUsername
          password-variable: codeArtifactPassword

      - name: Maven Install
        run: ./mvnw install -P ci -T 1C -s .github/settings.xml -B -am -pl :buffer-exchange-tests -DskipTests -Drevision=${{ needs.determine-version.outputs.version }}

      - name: Maven Tests
        run: ./mvnw install -P ci -T 1C -s .github/settings.xml -B -P test-buffer-exchange-failure-recovery -pl :buffer-exchange-tests -Drevision=${{ needs.determine-version.outputs.version }}
